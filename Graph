1. A graph G(V, E) is consisted of nodes (aka: veticles) and edges.
2. Two connected nodes are called neighbors.
3. The degree of a node is the number of its neighbors.
4. A path between node i and node j is the sequence of edges by which node i and node j is connected.
5. We can always find a path that is the shortest connecting node i and node j. The diameter of a graph is the shortest path among all the shortest path on any two nodes in the graph.
6. if the edges in a graph is directional, then this graph is directed. 
  1) the in-degree of node i is the number of edges that points to node i
  2) the out-degree of node i is the number of edges that points from node i.
7. There a are three ways to store a graph.
  1) A list of pairs of nodes that are connected.
  2) A adjacent matrix: 0 - unconnected, 1 - connected
  3) Adjacent arrays: for each node i, list all the connected nodes. For example: {1 : [2, 3, 4], 2 : [1, 3], 3 : [2, 4], ...}
8. Topological sort:
  1) find the in-degrees of the all the nodes and store the in-degrees in a list
  2) While the graph is not empty:
    a. choose a node with zero in-degrees and put it in the output list
    b. delete this node from the graph
    c. repeat step a and b.




References:
1. https://web.stanford.edu/class/cs97si/06-basic-graph-algorithms.pdf
2. Topological sort: https://courses.cs.washington.edu/courses/cse326/03wi/lectures/RaoLect20.pdf
